package acts.cdac.in;

public class TreeImplementation {
 
	 static class Root{
		  
		 int data;
		 Root left;
		 Root right;
		public Root(int data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
		
		public Root() {}

		 
	 }
	 
	 private Root root;

	public TreeImplementation() {
		
		this.root = null;
	}
	
	public void add(int ele) {
		
		 
		 Root nn = new Root(ele);
		 
		 if(root == null) {
			  
			root = nn;
		 }
		 else {
			 Root trav = root;
			 while(true) {
				  
				 if(ele < trav.data) {
					  
					 if(trav.left != null) {
						 trav = trav.left;
					 }
					 else {
						  trav.left = nn;
						  break;
					 }
				 }
				 else{//if(ele >= trav.data)
					  
					 if(trav.right != null) {
						 trav = trav.right;
					 }
					 else {
						  trav.right= nn;
						  break;
					 }
				 }
 
			 }
		 }
	}
	
	public void printPreorder(Root root) {
		  
		 if(root == null)
			 return;
		 else {
			  
			 System.out.print("data : "+root.data);
			 printPreorder(root.left);
			 printPreorder(root.right);
		 }
	}
	public void printPreorder() {
		   printPreorder( root) ;

	}
	public void printInorder(Root root) {
		
		if(root == null)
			return;
		else {
			
			printPreorder(root.left);
			System.out.print("data : "+root.data);
			printPreorder(root.right);
		}
	}
	public void printInorder() {
		printPreorder( root) ;
		
	}
	public void printPostorder(Root root) {
		
		if(root == null)
			return;
		else {
			
			printPreorder(root.left);
			printPreorder(root.right);
			System.out.print("data : "+root.data);
		}
	}
	public void printPostorder() {
		printPreorder( root) ;
		
	}

	 public static void main(String[] args) {
		 TreeImplementation tree = new TreeImplementation();
		 tree.add(50);
		 tree.add(30);
		 tree.add(10);
		 tree.add(90);
		 tree.add(100);
		 tree.printPreorder();
		 
	}
	 
}
